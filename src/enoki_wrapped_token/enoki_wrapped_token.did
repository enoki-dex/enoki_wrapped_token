type Metadata = record {
  decimals : nat8;
  logo : text;
  name : text;
  symbol : text;
};
type Result = variant { Ok : Stats; Err : TxError };
type Result_1 = variant { Ok : nat; Err : TxError };
type Stats = record {
  fee : nat;
  deploy_time : nat64;
  owner : principal;
  cycles : nat64;
  total_supply : nat;
};
type TxError = variant {
  TransferCallbackError : text;
  InsufficientBalance;
  TransferValueTooSmall;
  Unauthorized;
  AccountDoesNotExist;
  AccountAlreadyExists;
  Other : text;
};
service : (text, text, text, nat8, principal, nat) -> {
  balanceOf : (principal) -> (nat) query;
  decimals : () -> (nat8) query;
  getLogo : () -> (text) query;
  getMetadata : () -> (Metadata) query;
  name : () -> (text) query;
  owner : () -> (principal) query;
  setFee : (nat) -> ();
  setLogo : (text) -> ();
  setOwner : (principal) -> ();
  stats : () -> (Result) query;
  symbol : () -> (text) query;
  totalSupply : () -> (Result_1) query;
}